server:
  global:
    scrape_interval: 20s
    scrape_timeout: 5s
  resources:
    requests:
      cpu: 1
      memory: 1Gi
    limits:
      cpu: 2
      memory: 2Gi
pushgateway:
  enabled: true
kube-state-metrics:
  enabled: true
  metricLabelsAllowlist:
    - pods=[evaluation-id]
alertmanager:
  enabled: true
  config:
    receivers:
      - name: default-receiver
        webhook_configs:
          - send_resolved: true
            url: http://evaluationengine.evaluation:8080/api/alerts
    route:
      group_wait: 0s
      group_interval: 120s
      receiver: default-receiver
      repeat_interval: 120s
serverFiles:
  alerting_rules.yml:
    groups:
      - name: CpuUsage
        rules:
#          - alert: AllPodsLowCpuUsage
#            expr: count by (label_evaluation_id)(avg by (pod, label_evaluation_id)(rate(container_cpu_usage_seconds_total[1m]) * on (pod) group_left (label_evaluation_id) kube_pod_labels{label_evaluation_id!=""}) < 0.3) == 6
#            for: 30s
#            labels:
#              severity: page
#            annotations:
#              description: 'All pods of evaluation {{ $labels.label_evaluation_id }} have low cpu usage'
#              summary: 'All pods of evaluation {{ $labels.label_evaluation_id }} have low cpu usage'
          - alert: OnePodLowCpuUsage
            expr: (rate(container_cpu_usage_seconds_total[1m]) * on (pod) group_left (label_evaluation_id) kube_pod_labels{label_evaluation_id!=""}) < 0.3
            for: 30s
            labels:
              severity: page
            annotations:
              description: 'One pod with name {{ $labels.pod }} has low cpu usage'
              summary: 'One pod with name {{ $labels.pod }} has low cpu usage'