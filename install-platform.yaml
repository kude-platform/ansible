- name: Install Docker
  become: true
  hosts: pies
  tasks:
  - name: Ping hosts
    ansible.builtin.ping:
  - name: Update package cache
    ansible.builtin.apt:
      update_cache: yes
  - name: Install docker
    ansible.builtin.apt:
      pkg:
      - docker.io
      - git
  - name: Check if cgroups are enabled
    command: cat /boot/firmware/cmdline.txt
    register: cmdlineContent
  - name: Enable cgroups
    command: sed -i '$ s/$/ cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1/' /boot/firmware/cmdline.txt
    when: "'cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1' not in cmdlineContent.stdout"
    notify: 
    - Restart pi
  handlers:
  - name: Restart pi
    ansible.builtin.reboot:

- name: Install k3s bootstrap server
  become: true
  hosts: bootstrapMaster
  tasks:
  - name: Ping host
    ansible.builtin.ping:
  - name: Install helm
    shell: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  - name: ensures /etc/rancher/k3s dir exists
    file: 
      path: /etc/rancher/k3s
      state: directory
  - name: Copy private registry configuration
    copy:
      src: ./k3s/registries.yaml
      dest: /etc/rancher/k3s/registries.yaml
  - name: Install k3s bootstrap server
    shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_KUBECONFIG_MODE="644" INSTALL_K3S_EXEC="server --embedded-registry" sh -s -
    #shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_KUBECONFIG_MODE="644" INSTALL_K3S_EXEC="server --embedded-registry" --kubelet-arg='container-log-max-size=1000Mi' sh -s -

  - name: Extract K3S_TOKEN from server output
    command: cat /var/lib/rancher/k3s/server/node-token
    register: k3s_token
    failed_when: k3s_token is failed or k3s_token.stdout is undefined
  - name: Set K3S_TOKEN as a fact
    set_fact:
      k3s_token: "{{ k3s_token.stdout }}"
  - name: Create evaluation namespace
    shell: kubectl create ns evaluation
    ignore_errors: yes

- name: Install k3s workers
  become: true
  hosts: workers
  tasks:
  - name: Ping hosts
    ansible.builtin.ping:
  - name: ensures /etc/rancher/k3s dir exists
    file: 
      path: /etc/rancher/k3s
      state: directory
  - name: Copy private registry configuration
    copy:
      src: ./k3s/registries.yaml
      dest: /etc/rancher/k3s/registries.yaml
  - name: Install k3s workers
    shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_URL=https://{{ hostvars['pimaster']['ansible_default_ipv4'].address }}:6443 K3S_TOKEN={{ hostvars['pimaster']['k3s_token'] }} sh -

- name: Fetch k3s kubeconfig
  become: true
  hosts: bootstrapMaster
  tasks:
  - name: Fetch kubeconfig
    fetch:
      src: /etc/rancher/k3s/k3s.yaml
      dest: k3sconfig
      flat: true

- import_playbook: build-dockerfiles.yaml